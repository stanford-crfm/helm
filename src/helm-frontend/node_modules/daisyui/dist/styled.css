.alert {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    align-content: flex-start;
    align-items: center;
    justify-items: center;
    gap: 1rem;
    text-align: center
}
@media (min-width: 640px) {
    .alert {
        grid-auto-flow: column;
        grid-template-columns: auto minmax(auto,1fr);
        justify-items: start;
        text-align: left
    }
}
.artboard {
    width: 100%
}
.avatar {
    position: relative;
    display: inline-flex
}
  .avatar > div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden
}
  .avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover
}
  .avatar.placeholder > div {
    display: flex;
    align-items: center;
    justify-content: center
}
.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  height: 1.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  width: fit-content;
  padding-left: 0.563rem;
  padding-right: 0.563rem
}
.btm-nav {
  position: fixed;
  bottom: 0px;
  left: 0px;
  right: 0px;
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  padding-bottom: env(safe-area-inset-bottom)
}
  .btm-nav > * {
  position: relative;
  display: flex;
  height: 100%;
  flex-basis: 100%;
  cursor: pointer;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.25rem
}
.breadcrumbs {
    max-width: 100%;
    overflow-x: auto
}
  .breadcrumbs > ul,
  .breadcrumbs > ol {
    display: flex;
    align-items: center;
    white-space: nowrap;
    min-height: min-content
}
  .breadcrumbs > ul > li, .breadcrumbs > ol > li {
    display: flex;
    align-items: center
}
  .breadcrumbs > ul > li > a, .breadcrumbs > ol > li > a {
    display: flex;
    cursor: pointer;
    align-items: center
}
  @media(hover:hover) {
    .breadcrumbs > ul > li > a:hover, .breadcrumbs > ol > li > a:hover {
        text-decoration-line: underline
    }
}
.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-color: transparent;
  text-align: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-radius: var(--rounded-btn, 0.5rem);
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  min-height: 3rem;
  font-size: 0.875rem;
  line-height: 1em;
}

  /* disabled */
  .btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
}
  /* shapes */
  .btn-square {
  height: 3rem;
  width: 3rem;
  padding: 0px;
}
  .btn-circle {
  height: 3rem;
  width: 3rem;
  border-radius: 9999px;
  padding: 0px;
}

/* group */

.btn-group {
  display: inline-flex;
}

.btn-group > input[type="radio"].btn {
  appearance: none;
}

.btn-group > input[type="radio"].btn:before {
    content: attr(data-title);
  }

/* radio input and checkbox as button */

.btn:is(input[type="checkbox"]),
.btn:is(input[type="radio"]) {
  width: auto;
  appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}
.card {
      position: relative;
      display: flex;
      flex-direction: column
}
  .card:focus {
      outline: 2px solid transparent;
      outline-offset: 2px
}
  .card-body {
      display: flex;
      flex: 1 1 auto;
      flex-direction: column
}
  .card-body :where(p) {
      flex-grow: 1
}
  .card-actions {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      gap: 0.5rem
}
  .card figure {
      display: flex;
      align-items: center;
      justify-content: center
}
  .card.image-full {
      display: grid
}
  .card.image-full:before {
      position: relative;
      content: ""
}
  .card.image-full:before,
    .card.image-full > * {
      grid-column-start: 1;
      grid-row-start: 1
}
  .card.image-full > figure img {
      height: 100%;
      object-fit: cover
}
  .card.image-full > .card-body {
      position: relative
}
.carousel {
  display: inline-flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
}
  .carousel-vertical {
  flex-direction: column;
  overflow-y: scroll;
    scroll-snap-type: y mandatory;
}
  .carousel-item {
  box-sizing: content-box;
  display: flex;
  flex: none;
    scroll-snap-align: start;
}
  .carousel-center .carousel-item {
    scroll-snap-align: center;
  }
  .carousel-end .carousel-item {
    scroll-snap-align: end;
  }
.chat {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    column-gap: 0.75rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
}
  .chat-image {
    grid-row: span 2 / span 2;
    align-self: flex-end;
}
  .chat-header {
    grid-row-start: 1;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
  .chat-footer {
    grid-row-start: 3;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
  .chat-bubble {
    position: relative;
    display: block;
    width: fit-content;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    max-width: 90%;
}
  .chat-bubble:before {
    position: absolute;
    bottom: 0px;
    height: 0.75rem;
    width: 0.75rem;
      background-color: inherit;
      content: "";
      mask-size: contain;
      mask-repeat: no-repeat;
      mask-position: center;
}
  .chat-start {
    place-items: start;
    grid-template-columns: auto 1fr;
}
  .chat-start .chat-header {
    grid-column-start: 2;
}
  .chat-start .chat-footer {
    grid-column-start: 2;
}
  .chat-start .chat-image {
    grid-column-start: 1;
}
  .chat-start .chat-bubble {
    grid-column-start: 2;
}
  .chat-start .chat-bubble:before {
        mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
      }
  [dir="rtl"] .chat-start .chat-bubble:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
  .chat-end {
    place-items: end;
    grid-template-columns: 1fr auto;
}
  .chat-end .chat-header {
    grid-column-start: 1;
}
  .chat-end .chat-footer {
    grid-column-start: 1;
}
  .chat-end .chat-image {
    grid-column-start: 2;
}
  .chat-end .chat-bubble {
    grid-column-start: 1;
}
  .chat-end .chat-bubble:before {
        mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
      }
  [dir="rtl"] .chat-end .chat-bubble:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
.checkbox {
    flex-shrink: 0
}
.collapse:not(td):not(tr):not(colgroup) {
  visibility: visible;
}
.collapse {
  position: relative;
  display: grid;
  overflow: hidden;
  grid-template-rows: auto 0fr;
  transition: grid-template-rows 0.2s;
}
.collapse-title,
.collapse > input[type="checkbox"],
.collapse > input[type="radio"],
.collapse-content {
  grid-column-start: 1;
  grid-row-start: 1;
}
.collapse > input[type="checkbox"],
.collapse > input[type="radio"] {
  appearance: none;
  opacity: 0;
}
.collapse-content {
  visibility: hidden;
  grid-column-start: 1;
  grid-row-start: 2;
  min-height: 0px;
  transition: visibility 0.2s;
}
.collapse[open],
.collapse-open,
.collapse:focus:not(.collapse-close) {
  grid-template-rows: auto 1fr;
}
.collapse:not(.collapse-close):has(> input[type="checkbox"]:checked),
.collapse:not(.collapse-close):has(> input[type="radio"]:checked) {
  grid-template-rows: auto 1fr;
}
.collapse[open] > .collapse-content,
.collapse-open > .collapse-content,
.collapse:focus:not(.collapse-close) > .collapse-content,
.collapse:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-content,
.collapse:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-content {
  visibility: visible;
  min-height: fit-content;
}
:root .countdown {
  line-height: 1em;
}
.countdown {
  display: inline-flex;
}
.countdown > * {
    height: 1em;
    display: inline-block;
    overflow-y: hidden;
  }
.countdown > *:before {
      position: relative;
      content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
      white-space: pre;
      top: calc(var(--value) * -1em);
    }
.divider {
    display: flex;
    flex-direction: row;
    align-items: center;
    align-self: stretch;
}
  .divider:before,
  .divider:after {
    content: "";
    flex-grow: 1;
    height: 0.125rem;
    width: 100%;
  }
.drawer {
  position: relative;
  display: grid;
  grid-auto-columns: max-content auto;
}
  .drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
}
  .drawer-side {
  pointer-events: none;
  position: fixed;
  left: 0px;
  top: 0px;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-y: auto;
  overscroll-behavior: contain;
    height: 100vh;
    height: 100dvh;
    scrollbar-width: none;
}
  .drawer-side::-webkit-scrollbar {
  display: none;
}
  .drawer-side > .drawer-overlay {
  position: sticky;
  top: 0px;
  place-self: stretch;
}
  .drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
  .drawer-side > *:not(.drawer-overlay) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transform: translateX(-100%);
}
  [dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(-100%);
      }
  .drawer-toggle {
  position: fixed;
  height: 0px;
  width: 0px;
  appearance: none;
  opacity: 0;
}
  .drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
}
  .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
          transform: translateX(0%);
        }
  .drawer-end {
    grid-auto-columns: auto max-content;
  }
  .drawer-end .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}
  .drawer-end .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}
  .drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(100%);
      }
  .drawer-end .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(0%);
      }
.dropdown {
  position: relative;
  display: inline-block
}
.dropdown > *:not(summary):focus {
  outline: 2px solid transparent;
  outline-offset: 2px
}
.dropdown .dropdown-content {
  position: absolute
}
.dropdown:is(:not(details)) .dropdown-content {
  visibility: hidden;
  opacity: 0
}
.dropdown-end .dropdown-content {
  right: 0px
}
.dropdown-left .dropdown-content {
  bottom: auto;
  right: 100%;
  top: 0px
}
.dropdown-right .dropdown-content {
  bottom: auto;
  left: 100%;
  top: 0px
}
.dropdown-bottom .dropdown-content {
  bottom: auto;
  top: 100%
}
.dropdown-top .dropdown-content {
  bottom: 100%;
  top: auto
}
.dropdown-end.dropdown-right .dropdown-content {
  bottom: 0px;
  top: auto
}
.dropdown-end.dropdown-left .dropdown-content {
  bottom: 0px;
  top: auto
}
.dropdown.dropdown-open .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
  visibility: visible;
  opacity: 1
}
@media (hover: hover) {
  .dropdown.dropdown-hover:hover .dropdown-content {
    visibility: visible;
    opacity: 1
  }
}
.dropdown:is(details) summary::-webkit-details-marker {
  display: none
}
.file-input {
    height: 3rem;
    flex-shrink: 1;
    padding-right: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2
}
  .file-input::file-selector-button {
    margin-right: 1rem;
    display: inline-flex;
    height: 100%;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: 0.875rem;
    line-height: 1.25rem;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    line-height: 1em
}
.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
}
  .footer > * {
  display: grid;
  place-items: start;
}
  .footer-center {
  place-items: center;
  text-align: center;
}
  .footer-center > * {
  place-items: center;
}
@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }
  .footer-center {
    grid-auto-flow: row dense;
  }
}
.form-control {
    display: flex;
    flex-direction: column
}
.label {
    display: flex;
    user-select: none;
    align-items: center;
    justify-content: space-between
}
.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center
}
  .hero > * {
    grid-column-start: 1;
    grid-row-start: 1
}
  .hero-overlay {
    grid-column-start: 1;
    grid-row-start: 1;
    height: 100%;
    width: 100%
}
  .hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center
}
.indicator {
  position: relative;
  display: inline-flex;
  width: max-content;
}
  .indicator :where(.indicator-item) {
    z-index: 1;
    position: absolute;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    white-space: nowrap;
  }
.input {
    flex-shrink: 1;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
}
.input-group {
    display: flex;
    width: 100%;
    align-items: stretch;
}
.input-group > .input {
    isolation: isolate;
}
.input-group > *,
  .input-group > .input,
  .input-group > .textarea,
  .input-group > .select {
    border-radius: 0px;
}
.input-group-md {
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
}
.input-group-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
    line-height: 2;
}
.input-group-sm {
    font-size: 0.875rem;
    line-height: 2rem;
}
.input-group-xs {
    font-size: 0.75rem;
    line-height: 1rem;
    line-height: 1.625;
}
.input-group :where(span) {
    display: flex;
    align-items: center;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity));
    padding-left: 1rem;
    padding-right: 1rem;
}
.input-group > :first-child {
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0;
  }
.input-group > :last-child {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  }
.input-group-vertical {
    flex-direction: column;
}
.input-group-vertical :first-child {
      border-top-left-radius: var(--rounded-btn, 0.5rem);
      border-top-right-radius: var(--rounded-btn, 0.5rem);
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
.input-group-vertical :last-child {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      border-bottom-left-radius: var(--rounded-btn, 0.5rem);
      border-bottom-right-radius: var(--rounded-btn, 0.5rem);
    }
.join {
    display: inline-flex;
    align-items: stretch;
}
  .join :where(.join-item) {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0;
  }
  .join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0;
  }
  .join .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
  }
  .join .dropdown .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .dropdown .join-item {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit;
  }
  .join :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item) {
    border-end-start-radius: inherit;
    border-start-start-radius: inherit;
  }
  .join .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item {
    border-end-start-radius: 0;
    border-start-start-radius: 0;
  }
  .join :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item) {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit;
  }
:where(.join *) {
    border-radius: inherit;
}
.kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center
}
.link {
    cursor: pointer;
    text-decoration-line: underline
}
  .link-hover {
    text-decoration-line: none
}
  @media(hover:hover) {
    .link-hover:hover {
        text-decoration-line: underline
    }
}
.mask {
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
}
.mask-half-1 {
  mask-size: 200%;
  mask-position: left;
}
.mask-half-2 {
  mask-size: 200%;
  mask-position: right;
}
.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    font-size: 0.875rem;
    line-height: 1.25rem
}
  .menu :where(li ul) {
    position: relative;
    white-space: nowrap
}
  .menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    user-select: none
}
  .menu li.disabled {
    cursor: not-allowed;
    user-select: none
}
  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none
}
:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch
}
:where(.menu li) .badge {
    justify-self: end
}
.mockup-code {
        position: relative;
        overflow: hidden;
        overflow-x: auto;
}
    .mockup-code pre[data-prefix]:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
  .mockup-window {
        position: relative;
        overflow: hidden;
        overflow-x: auto;
}
  .mockup-window pre[data-prefix]:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
  .mockup-browser {
        position: relative;
        overflow: hidden;
        overflow-x: auto;
}
  .mockup-browser pre[data-prefix]:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
.modal {
  /* @apply pointer-events-none invisible fixed inset-0 flex justify-center opacity-0; */
  pointer-events: none;
  position: fixed;
  inset: 0px;
  margin: 0px;
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  justify-items: center;
  padding: 0px;
  opacity: 0;
  overscroll-behavior: contain;
  z-index: 999;
}
.modal-scroll {
  overscroll-behavior: auto;
}
:where(.modal) {
  align-items: center;
}
.modal-box {
  max-height: calc(100vh - 5em);
}
.modal-open,
.modal:target,
.modal-toggle:checked + .modal,
.modal[open] {
  pointer-events: auto;
  visibility: visible;
  opacity: 1;
}
.modal-action {
  display: flex;
}
.modal-toggle {
  position: fixed;
  height: 0px;
  width: 0px;
  appearance: none;
  opacity: 0;
}
:root:has(:is(.modal-open, .modal:target, .modal-toggle:checked + .modal, .modal[open])) {
  overflow: hidden;
}
.navbar {
  display: flex;
  align-items: center;
}
:where(.navbar > *) {
  display: inline-flex;
  align-items: center;
}
.navbar-start {
  width: 50%;
  justify-content: flex-start;
}
.navbar-center {
  flex-shrink: 0;
}
.navbar-end {
  width: 50%;
  justify-content: flex-end;
}
.progress {
    position: relative;
    width: 100%;
    appearance: none;
    overflow: hidden
}
.radial-progress {
  position: relative;
  display: inline-grid;
  height: var(--size);
  width: var(--size);
  place-content: center;
  border-radius: 9999px;
  background-color: transparent;
  vertical-align: middle;
  box-sizing: content-box;
}
.radial-progress::-moz-progress-bar {
  appearance: none;
  background-color: transparent;
}
.radial-progress::-webkit-progress-value {
  appearance: none;
  background-color: transparent;
}
.radial-progress::-webkit-progress-bar {
  appearance: none;
  background-color: transparent;
}
.radial-progress:before,
.radial-progress:after {
  position: absolute;
  border-radius: 9999px;
  content: "";
}
.radial-progress:before {
  inset: 0px;
  background:
    radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness)
      no-repeat,
    conic-gradient(currentColor calc(var(--value) * 1%), #0000 0);
  -webkit-mask: radial-gradient(
    farthest-side,
    #0000 calc(99% - var(--thickness)),
    #000 calc(100% - var(--thickness))
  );
  mask: radial-gradient(
    farthest-side,
    #0000 calc(99% - var(--thickness)),
    #000 calc(100% - var(--thickness))
  );
}
.radial-progress:after {
  inset: calc(50% - var(--thickness) / 2);
  transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
}
.radio {
    flex-shrink: 0
}
.range {
    height: 1.5rem;
    width: 100%;
    cursor: pointer;
}
  .range:focus {
    outline: none;
  }
.rating {
    position: relative;
    display: inline-flex
}
  .rating :where(input) {
    cursor: pointer;
    border-radius: 0px
}
.select {
    display: inline-flex;
    cursor: pointer;
    user-select: none;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    min-height: 3rem
}

  /* disabled */
  /* &-disabled,
  &[disabled] {
    @apply pointer-events-none;
  } */
  /* multiple */
  .select[multiple] {
    height: auto
}
.stack {
    display: inline-grid;
}
  .stack > * {
    grid-column-start: 1;
    grid-row-start: 1;
    transform: translateY(10%) scale(0.9);
    z-index: 1;
}
  .stack > *:nth-child(2) {
    transform: translateY(5%) scale(0.95);
    z-index: 2;
  }
  .stack > *:nth-child(1) {
    transform: translateY(0) scale(1);
    z-index: 3;
  }
.stats {
  display: inline-grid
}
:where(.stats) {
  grid-auto-flow: column
}
.stat {
  display: inline-grid;
  width: 100%;
  grid-template-columns: repeat(1, 1fr)
}
.stat-figure {
  grid-column-start: 2;
  grid-row: span 3 / span 3;
  grid-row-start: 1;
  place-self: center;
  justify-self: end
}
.stat-title {
  grid-column-start: 1;
  white-space: nowrap
}
.stat-value {
  grid-column-start: 1;
  white-space: nowrap
}
.stat-desc {
  grid-column-start: 1;
  white-space: nowrap
}
.stat-actions {
  grid-column-start: 1;
  white-space: nowrap
}
/* .stats.grid-flow-row {
  @apply auto-rows-fr;
} */
.steps {
  display: inline-grid;
  grid-auto-flow: column;
  overflow: hidden;
  overflow-x: auto;
  counter-reset: step;
  grid-auto-columns: 1fr
}
  .steps .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(2, minmax(0, 1fr));
  place-items: center;
  text-align: center
}
.swap {

    position: relative;

    display: inline-grid;

    user-select: none;

    place-content: center
}

.swap > * {

    grid-column-start: 1;

    grid-row-start: 1
}

.swap input {

    appearance: none
}

.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {

    opacity: 0
}

.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {

    opacity: 0
}

.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {

    opacity: 1
}
.tabs {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end
}
.tab {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  text-align: center;
  height: 2rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 2;
  --tab-padding: 1rem
}
.table {
    position: relative;
    width: 100%
}
  .table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0px;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
  .table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0px;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
  .table :where(.table-pin-cols tr th) {
    position: sticky;
    left: 0px;
    right: 0px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
  .table-zebra tbody tr:nth-child(even) :where(.table-pin-cols tr th) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity))
}
.textarea {
    flex-shrink: 1;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2
}
.toast {
    position: fixed;
    display: flex;
    min-width: fit-content;
    flex-direction: column;
    white-space: nowrap
}
.toggle {
    flex-shrink: 0
}
.alert {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2) / var(--tw-border-opacity));
  padding: 1rem;
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  border-radius: var(--rounded-box, 1rem);
  --alert-bg: hsl(var(--b2));
  --alert-bg-mix: hsl(var(--b1));
  background-color: var(--alert-bg)
}
  /* @supports (background-color: color-mix(in srgb, var(--alert-bg) 50%, var(--alert-bg-mix))) {
    background-color: color-mix(in srgb, var(--alert-bg) 50%, var(--alert-bg-mix));
  } */
  .alert-info {
  border-color: hsl(var(--in) / 0.2);
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
    --alert-bg: hsl(var(--in));
    --alert-bg-mix: hsl(var(--b1))
}
  .alert-success {
  border-color: hsl(var(--su) / 0.2);
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
    --alert-bg: hsl(var(--su));
    --alert-bg-mix: hsl(var(--b1))
}
  .alert-warning {
  border-color: hsl(var(--wa) / 0.2);
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
    --alert-bg: hsl(var(--wa));
    --alert-bg-mix: hsl(var(--b1))
}
  .alert-error {
  border-color: hsl(var(--er) / 0.2);
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
    --alert-bg: hsl(var(--er));
    --alert-bg-mix: hsl(var(--b1))
}
.avatar-group {
    display: flex;
    overflow: hidden
}
  .avatar-group :where(.avatar) {
    overflow: hidden;
    border-radius: 9999px;
    border-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b1) / var(--tw-border-opacity))
}
.badge {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    border-radius: var(--rounded-badge, 1.9rem)
}
  .badge-neutral {
    --tw-border-opacity: 1;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity))
}
  .badge-primary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity))
}
  .badge-secondary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--sc) / var(--tw-text-opacity))
}
  .badge-accent {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--ac) / var(--tw-text-opacity))
}
  .badge-info {
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--inc) / var(--tw-text-opacity))
}
  .badge-success {
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--suc) / var(--tw-text-opacity))
}
  .badge-warning {
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--wac) / var(--tw-text-opacity))
}
  .badge-error {
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--erc) / var(--tw-text-opacity))
}
  .badge-ghost {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity))
}
  .badge-outline {
    border-color: currentColor;
    --tw-border-opacity: 0.5;
    background-color: transparent;
    color: currentColor
}
  .badge-outline.badge-neutral {
    --tw-text-opacity: 1;
    color: hsl(var(--n) / var(--tw-text-opacity))
}
  .badge-outline.badge-primary {
    --tw-text-opacity: 1;
    color: hsl(var(--p) / var(--tw-text-opacity))
}
  .badge-outline.badge-secondary {
    --tw-text-opacity: 1;
    color: hsl(var(--s) / var(--tw-text-opacity))
}
  .badge-outline.badge-accent {
    --tw-text-opacity: 1;
    color: hsl(var(--a) / var(--tw-text-opacity))
}
  .badge-outline.badge-info {
    --tw-text-opacity: 1;
    color: hsl(var(--in) / var(--tw-text-opacity))
}
  .badge-outline.badge-success {
    --tw-text-opacity: 1;
    color: hsl(var(--su) / var(--tw-text-opacity))
}
  .badge-outline.badge-warning {
    --tw-text-opacity: 1;
    color: hsl(var(--wa) / var(--tw-text-opacity))
}
  .badge-outline.badge-error {
    --tw-text-opacity: 1;
    color: hsl(var(--er) / var(--tw-text-opacity))
}
.btm-nav {
      height: 4rem;
      --tw-bg-opacity: 1;
      background-color: hsl(var(--b1) / var(--tw-bg-opacity));
      color: currentColor
}
  .btm-nav > * {
      border-color: currentColor
}
  .btm-nav > *:not(.active) {
      padding-top: 0.125rem
}
  /* active */
  .btm-nav > *:where(.active) {
      border-top-width: 2px;
      --tw-bg-opacity: 1;
      background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
  /* disabled */
  .btm-nav > *.disabled,
    .btm-nav > *[disabled] {
      pointer-events: none;
      --tw-border-opacity: 0;
      background-color: hsl(var(--n) / var(--tw-bg-opacity));
      --tw-bg-opacity: 0.1;
      color: hsl(var(--bc) / var(--tw-text-opacity));
      --tw-text-opacity: 0.2
}
  @media (hover: hover) {
      .btm-nav > *.disabled:hover,
      .btm-nav > *[disabled]:hover {
            pointer-events: none;
            --tw-border-opacity: 0;
            background-color: hsl(var(--n) / var(--tw-bg-opacity));
            --tw-bg-opacity: 0.1;
            color: hsl(var(--bc) / var(--tw-text-opacity));
            --tw-text-opacity: 0.2
      }
    }
  .btm-nav > * .label {
      font-size: 1rem;
      line-height: 1.5rem
}
.breadcrumbs {
          padding-top: 0.5rem;
          padding-bottom: 0.5rem;
}
  .breadcrumbs > ul > li > a:focus, .breadcrumbs > ol > li > a:focus {
          outline: 2px solid transparent;
          outline-offset: 2px;
}
  .breadcrumbs > ul > li > a:focus-visible, .breadcrumbs > ol > li > a:focus-visible {
          outline: 2px solid currentColor;
          outline-offset: 2px;
        }
  .breadcrumbs > ul > li + *:before, .breadcrumbs > ol > li + *:before {
        content: "";
        margin-left: 0.5rem;
        margin-right: 0.75rem;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        --tw-rotate: 45deg;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
        opacity: 0.4;
        border-top: 1px solid;
        border-right: 1px solid;
        background-color: transparent;
      }

[dir="rtl"] .breadcrumbs > ul > li + *:before,
[dir="rtl"] .breadcrumbs > ol > li + *:before {
  --tw-rotate: -45deg;
}
.btn {
  gap: 0.5rem;
  font-weight: 600;
  text-decoration-line: none;
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  text-transform: var(--btn-text-case, uppercase);
}
  .btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
  }
  /* default btn */
  .btn {
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  text-decoration-line: none;
  outline-color: hsl(var(--bc) / 1);
}
  @media (hover: hover) {
      .btn:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b3) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity));
  }
    }
  .btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--b3) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b3) / var(--tw-bg-opacity));
}
  .btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}
  /* brand colors */
  .btn-primary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
  outline-color: hsl(var(--p) / 1);
}
  @media (hover: hover) {
      .btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf) / var(--tw-bg-opacity));
  }
    }
  .btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--pf) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pf) / var(--tw-bg-opacity));
}
  .btn-secondary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
  outline-color: hsl(var(--s) / 1);
}
  @media (hover: hover) {
      .btn-secondary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--sf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--sf) / var(--tw-bg-opacity));
  }
    }
  .btn-secondary.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--sf) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--sf) / var(--tw-bg-opacity));
}
  .btn-accent {
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / var(--tw-text-opacity));
  outline-color: hsl(var(--a) / 1);
}
  @media (hover: hover) {
      .btn-accent:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--af) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--af) / var(--tw-bg-opacity));
  }
    }
  .btn-accent.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--af) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--af) / var(--tw-bg-opacity));
}
  .btn-neutral {
  --tw-border-opacity: 1;
  border-color: hsl(var(--n) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity));
  outline-color: hsl(var(--n) / 1);
}
  @media (hover: hover) {
      .btn-neutral:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--nf) / var(--tw-bg-opacity));
  }
    }
  .btn-neutral.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--nf) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nf) / var(--tw-bg-opacity));
}
  /* btn with state colors */
  .btn-info {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
  outline-color: hsl(var(--in) / 1);
}
  @media (hover: hover) {
      .btn-info:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
  }
    }
  .btn-info.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
  .btn-success {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
  outline-color: hsl(var(--su) / 1);
}
  @media (hover: hover) {
      .btn-success:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
  }
    }
  .btn-success.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
}
  .btn-warning {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
  outline-color: hsl(var(--wa) / 1);
}
  @media (hover: hover) {
      .btn-warning:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  }
    }
  .btn-warning.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
}
  .btn-error {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
  outline-color: hsl(var(--er) / 1);
}
  @media (hover: hover) {
      .btn-error:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
  }
    }
  .btn-error.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
}
  /* glass */
  .btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}
  @media (hover: hover) {
      .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%;
      }
    }
  .btn.glass.btn-active {
      --glass-opacity: 25%;
      --glass-border-opacity: 15%;
    }
  /* btn variants */
  .btn-ghost {
  border-width: 1px;
  border-color: transparent;
  background-color: transparent;
  color: currentColor;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}
  @media (hover: hover) {
      .btn-ghost:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
  }
    }
  .btn-ghost.btn-active {
  --tw-border-opacity: 0;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
}
  .btn-link {
  border-color: transparent;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--p) / var(--tw-text-opacity));
  text-decoration-line: underline;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}
  @media (hover: hover) {
      .btn-link:hover {
    border-color: transparent;
    background-color: transparent;
    text-decoration-line: underline;
  }
    }
  .btn-link.btn-active {
  border-color: transparent;
  background-color: transparent;
  text-decoration-line: underline;
}
  /* outline */
  .btn-outline {
  border-color: currentColor;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
  @media (hover: hover) {
      .btn-outline:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--b1) / var(--tw-text-opacity));
  }
    }
  .btn-outline.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--b1) / var(--tw-text-opacity));
}
  .btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: hsl(var(--p) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--pf) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pf) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
  .btn-outline.btn-secondary {
  --tw-text-opacity: 1;
  color: hsl(var(--s) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-secondary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--sf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--sf) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--sc) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-secondary.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--sf) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--sf) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
  .btn-outline.btn-accent {
  --tw-text-opacity: 1;
  color: hsl(var(--a) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-accent:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--af) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--af) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--ac) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-accent.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--af) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--af) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
  .btn-outline.btn-success {
  --tw-text-opacity: 1;
  color: hsl(var(--su) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-success:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--suc) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-success.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
}
  .btn-outline.btn-info {
  --tw-text-opacity: 1;
  color: hsl(var(--in) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-info:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--inc) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-info.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
}
  .btn-outline.btn-warning {
  --tw-text-opacity: 1;
  color: hsl(var(--wa) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-warning:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--wac) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-warning.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
}
  .btn-outline.btn-error {
  --tw-text-opacity: 1;
  color: hsl(var(--er) / var(--tw-text-opacity));
}
  @media (hover: hover) {
        .btn-outline.btn-error:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--erc) / var(--tw-text-opacity));
  }
      }
  .btn-outline.btn-error.btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
}
  /* disabled */
  .btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  --tw-border-opacity: 0;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}
  @media (hover: hover) {
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
  }
  }
/* group */
.btn-group > input[type="radio"]:checked.btn,
  .btn-group > .btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-color: hsl(var(--p) / 1);
}
/* radio input and checkbox as button */
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
@media (hover: hover) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf) / var(--tw-bg-opacity));
  }
  }
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: hsl(var(--p) / 1);
}
@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }
  40% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}
.card {
    border-radius: var(--rounded-box, 1rem);
}
  .card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
}
  .card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
}
  .card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
}
  .card-bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
}
  .card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
  .card-body {
    padding: var(--padding-card, 2rem);
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .card-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600;
}
  .card.image-full:before {
    z-index: 10;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    opacity: 0.75;
    border-radius: var(--rounded-box, 1rem);
}
  .card.image-full > .card-body {
    z-index: 20;
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}
  .card.image-full :where(figure) {
    overflow: hidden;
      border-radius: inherit;
}
.carousel {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
  .carousel::-webkit-scrollbar {
  display: none;
}
.chat-bubble {
    border-radius: var(--rounded-box, 1rem);
    min-height: 2.75rem;
    min-width: 2.75rem;
}

    /* default */
    .chat-bubble {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}
    /* brand colors */
    .chat-bubble-primary {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
    .chat-bubble-secondary {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--sc) / var(--tw-text-opacity));
}
    .chat-bubble-accent {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--ac) / var(--tw-text-opacity));
}
    /* state colors */
    .chat-bubble-info {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--inc) / var(--tw-text-opacity));
}
    .chat-bubble-success {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--suc) / var(--tw-text-opacity));
}
    .chat-bubble-warning {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--wac) / var(--tw-text-opacity));
}
    .chat-bubble-error {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--erc) / var(--tw-text-opacity));
}
  .chat-start .chat-bubble {
    border-bottom-left-radius: 0px;
}
  .chat-start .chat-bubble:before {
      left: -0.749rem;
    }
  .chat-end .chat-bubble {
    border-bottom-right-radius: 0px;
}
  .chat-end .chat-bubble:before {
      left: 99.9%;
    }
.checkbox {
  --chkbg: var(--bc);
  --chkfg: var(--b1);
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
  appearance: none;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  border-radius: var(--rounded-btn, 0.5rem);
}
  .checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1);
}
  .checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
      linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
      linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
      linear-gradient(
        45deg,
        hsl(var(--chkbg)) 30%,
        hsl(var(--chkfg)) 30.99%,
        hsl(var(--chkfg)) 40%,
        transparent 40.99%
      ),
      linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
  .checkbox:indeterminate {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%),
      linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
      linear-gradient(
        0deg,
        hsl(var(--chkbg)) 43%,
        hsl(var(--chkfg)) 43%,
        hsl(var(--chkfg)) 57%,
        hsl(var(--chkbg)) 57%
      );
}
  .checkbox-primary {
    --chkbg: var(--p);
    --chkfg: var(--pc);
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-primary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
}
  .checkbox-primary:focus-visible {
  outline-color: hsl(var(--p) / 1);
}
  .checkbox-primary:checked,
    .checkbox-primary[checked="true"],
    .checkbox-primary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
  .checkbox-secondary {
    --chkbg: var(--s);
    --chkfg: var(--sc);
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-secondary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
  }
}
  .checkbox-secondary:focus-visible {
  outline-color: hsl(var(--s) / 1);
}
  .checkbox-secondary:checked,
    .checkbox-secondary[checked="true"],
    .checkbox-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
  .checkbox-accent {
    --chkbg: var(--a);
    --chkfg: var(--ac);
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-accent:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
  }
}
  .checkbox-accent:focus-visible {
  outline-color: hsl(var(--a) / 1);
}
  .checkbox-accent:checked,
    .checkbox-accent[checked="true"],
    .checkbox-accent[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
  .checkbox-success {
    --chkbg: var(--su);
    --chkfg: var(--suc);
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-success:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
  }
}
  .checkbox-success:focus-visible {
  outline-color: hsl(var(--su) / 1);
}
  .checkbox-success:checked,
    .checkbox-success[checked="true"],
    .checkbox-success[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
}
  .checkbox-warning {
    --chkbg: var(--wa);
    --chkfg: var(--wac);
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-warning:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
  }
}
  .checkbox-warning:focus-visible {
  outline-color: hsl(var(--wa) / 1);
}
  .checkbox-warning:checked,
    .checkbox-warning[checked="true"],
    .checkbox-warning[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
}
  .checkbox-info {
    --chkbg: var(--in);
    --chkfg: var(--inc);
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-info:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
  }
}
  .checkbox-info:focus-visible {
  outline-color: hsl(var(--in) / 1);
}
  .checkbox-info:checked,
    .checkbox-info[checked="true"],
    .checkbox-info[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
}
  .checkbox-error {
    --chkbg: var(--er);
    --chkfg: var(--erc);
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .checkbox-error:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
  }
}
  .checkbox-error:focus-visible {
  outline-color: hsl(var(--er) / 1);
}
  .checkbox-error:checked,
    .checkbox-error[checked="true"],
    .checkbox-error[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
}
  .checkbox:disabled {
  cursor: not-allowed;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  opacity: 0.2;
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }
  50% {
    background-position-y: -2px;
  }
  100% {
    background-position-y: 0;
  }
}

/* backward compatibility */

.checkbox-mark {
  display: none;
}

[dir="rtl"] .checkbox:checked,
    [dir="rtl"] .checkbox[checked="true"],
    [dir="rtl"] .checkbox[aria-checked="true"] {
      background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
        linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
        linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
        linear-gradient(
          -45deg,
          hsl(var(--chkbg)) 30%,
          hsl(var(--chkfg)) 30.99%,
          hsl(var(--chkfg)) 40%,
          transparent 40.99%
        ),
        linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
    }
.collapse {
  width: 100%;
  border-radius: var(--rounded-box, 1rem);
}
details.collapse {
  width: 100%;
}
details.collapse summary {
  position: relative;
  display: block;
}
details.collapse summary::-webkit-details-marker {
  display: none;
}
.collapse:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1);
}
details.collapse summary {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.collapse:has(.collapse-title:focus-visible),
.collapse:has(> input[type="checkbox"]:focus-visible),
.collapse:has(> input[type="radio"]:focus-visible) {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1);
}
.collapse-arrow > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  --tw-translate-y: -100%;
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  top: 50%;
  right: 1.4rem;
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}
[dir="rtl"] .collapse-arrow > .collapse-title:after {
  --tw-rotate: -45deg;
}
.collapse-plus > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  top: 0.9rem;
  right: 1.4rem;
  content: "+";
  pointer-events: none;
}
.collapse:not(.collapse-open):not(.collapse-close) > input[type="checkbox"],
.collapse:not(.collapse-open):not(.collapse-close) > input[type="radio"]:not(:checked),
.collapse:not(.collapse-open):not(.collapse-close) > .collapse-title {
  cursor: pointer;
}
.collapse:focus:not(.collapse-open):not(.collapse-close):not(.collapse[open]) > .collapse-title {
  cursor: unset;
}
.collapse-title {
  position: relative;
}
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
  z-index: 1;
}
.collapse-title,
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
  width: 100%;
  padding: 1rem;
  padding-right: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}
.collapse-content {
  padding-left: 1rem;
  padding-right: 1rem;
  cursor: unset;
  transition:
    padding 0.2s ease-out,
    background-color 0.2s ease-out;
}
.collapse[open] > :where(.collapse-content),
.collapse-open > :where(.collapse-content),
.collapse:focus:not(.collapse-close) > :where(.collapse-content),
.collapse:not(.collapse-close) > :where(input[type="checkbox"]:checked ~ .collapse-content),
.collapse:not(.collapse-close) > :where(input[type="radio"]:checked ~ .collapse-content) {
  padding-bottom: 1rem;
  transition:
    padding 0.2s ease-out,
    background-color 0.2s ease-out;
}
.collapse[open].collapse-arrow > .collapse-title:after,
.collapse-open.collapse-arrow > .collapse-title:after,
.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after,
.collapse-arrow:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after,
.collapse-arrow:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-title:after {
  --tw-translate-y: -50%;
  --tw-rotate: 225deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
[dir="rtl"] .collapse[open].collapse-arrow > .collapse-title:after,
[dir="rtl"] .collapse-open.collapse-arrow > .collapse-title:after,
[dir="rtl"] .collapse-arrow:focus:not(.collapse-close) .collapse-title:after,
[dir="rtl"]
  .collapse-arrow:not(.collapse-close)
  input[type="checkbox"]:checked
  ~ .collapse-title:after {
  --tw-rotate: 135deg;
}
.collapse[open].collapse-plus > .collapse-title:after,
.collapse-open.collapse-plus > .collapse-title:after,
.collapse-plus:focus:not(.collapse-close) > .collapse-title:after,
.collapse-plus:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after,
.collapse-plus:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-title:after {
  content: "−";
}
.countdown > *:before {
      text-align: center;
      transition: all 1s cubic-bezier(1, 0, 0, 1);
    }
.divider {
    margin-top: 1rem;
    margin-bottom: 1rem;
    height: 1rem;
    white-space: nowrap
}
  .divider:before {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1
}
  .divider:after {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1
}
  .divider:not(:empty) {
    gap: 1rem
}
.drawer {
  width: 100%;
}
  .drawer-side > .drawer-overlay {
  cursor: pointer;
  background-color: transparent;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
  .drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
        background-color: hsl(0 0% 0%/0.4);
      }
  .drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}
.dropdown:is(:not(details)) .dropdown-content {
  transform-origin: top;
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1)
}
.dropdown-bottom .dropdown-content {
  transform-origin: top
}
.dropdown-top .dropdown-content {
  transform-origin: bottom
}
.dropdown-left .dropdown-content {
  transform-origin: right
}
.dropdown-right .dropdown-content {
  transform-origin: left
}
.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
@media (hover: hover) {
  .dropdown.dropdown-hover:hover .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
  }
}
.file-input {
    overflow: hidden;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    font-size: 1rem;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, 0.5rem);
}
  .file-input::file-selector-button {
    border-style: solid;
    --tw-border-opacity: 1;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    font-weight: 600;
    text-transform: uppercase;
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    text-transform: var(--btn-text-case, uppercase);
  }
  .file-input-bordered {
    --tw-border-opacity: 0.2;
}
  .file-input:focus {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2);
}
  .file-input-ghost {
    --tw-bg-opacity: 0.05;
}
  .file-input-ghost:focus {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
      box-shadow: none;
}
  .file-input-ghost::file-selector-button {
    border-width: 1px;
    border-color: transparent;
    background-color: transparent;
    color: currentColor;
}
  .file-input-primary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
  .file-input-primary:focus {
    outline-color: hsl(var(--p) / 1);
}
  .file-input-primary::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
  .file-input-secondary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
}
  .file-input-secondary:focus {
    outline-color: hsl(var(--s) / 1);
}
  .file-input-secondary::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--sc) / var(--tw-text-opacity));
}
  .file-input-accent {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
}
  .file-input-accent:focus {
    outline-color: hsl(var(--a) / 1);
}
  .file-input-accent::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--ac) / var(--tw-text-opacity));
}
  .file-input-info {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
}
  .file-input-info:focus {
    outline-color: hsl(var(--in) / 1);
}
  .file-input-info::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--inc) / var(--tw-text-opacity));
}
  .file-input-success {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
}
  .file-input-success:focus {
    outline-color: hsl(var(--su) / 1);
}
  .file-input-success::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--suc) / var(--tw-text-opacity));
}
  .file-input-warning {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
}
  .file-input-warning:focus {
    outline-color: hsl(var(--wa) / 1);
}
  .file-input-warning::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--wac) / var(--tw-text-opacity));
}
  .file-input-error {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
}
  .file-input-error:focus {
    outline-color: hsl(var(--er) / 1);
}
  .file-input-error::file-selector-button {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--erc) / var(--tw-text-opacity));
}
  .file-input-disabled,
  .file-input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2;
}
  .file-input-disabled::placeholder,
  .file-input[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}
  .file-input-disabled::file-selector-button, .file-input[disabled]::file-selector-button {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}
.footer {
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem
}
  .footer > * {
    gap: 0.5rem
}
  .footer-title {
    margin-bottom: 0.5rem;
    font-weight: 700;
    text-transform: uppercase;
    opacity: 0.5
}
.label {
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem
}
  .label-text {
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity))
}
  .label-text-alt {
    font-size: 0.75rem;
    line-height: 1rem;
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity))
}
  @media(hover:hover) {
    .label a:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--bc) / var(--tw-text-opacity))
    }
}
.hero-overlay {
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.5
}
  .hero-content {
    max-width: 80rem;
    gap: 1rem;
    padding: 1rem
}
.input {
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  /* &::-webkit-calendar-picker-indicator {
    display: none;
  } */
}
  .input input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
  .input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
  }
  .input-bordered {
  --tw-border-opacity: 0.2;
}
  .input:focus,
  .input:focus-within {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 0.2);
}
  .input-ghost {
  --tw-bg-opacity: 0.05;
}
  .input-ghost:focus,
    .input-ghost:focus-within {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
      box-shadow: none;
}
  .input-primary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
  .input-primary:focus,
    .input-primary:focus-within {
  outline-color: hsl(var(--p) / 1);
}
  .input-secondary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
}
  .input-secondary:focus,
    .input-secondary:focus-within {
  outline-color: hsl(var(--s) / 1);
}
  .input-accent {
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / var(--tw-border-opacity));
}
  .input-accent:focus,
    .input-accent:focus-within {
  outline-color: hsl(var(--a) / 1);
}
  .input-info {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
}
  .input-info:focus,
    .input-info:focus-within {
  outline-color: hsl(var(--in) / 1);
}
  .input-success {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
}
  .input-success:focus,
    .input-success:focus-within {
  outline-color: hsl(var(--su) / 1);
}
  .input-warning {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
}
  .input-warning:focus,
    .input-warning:focus-within {
  outline-color: hsl(var(--wa) / 1);
}
  .input-error {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
}
  .input-error:focus,
    .input-error:focus-within {
  outline-color: hsl(var(--er) / 1);
}
  .input-disabled,
  .input:disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  --tw-text-opacity: 0.2;
}
  .input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}
.join {
    border-radius: var(--rounded-btn, 0.5rem)
}
  .join > :where(*:not(:first-child)) {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: -1px
}
  .join-item:focus {
    isolation: isolate
}
.kbd {
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-bottom-width: 2px;
  min-height: 2.2em;
  min-width: 2.2em
}
.link-primary {
    --tw-text-opacity: 1;
    color: hsl(var(--p) / var(--tw-text-opacity));
}
@media(hover:hover) {
    .link-primary:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--pf) / var(--tw-text-opacity));
    }
}
  .link-secondary {
    --tw-text-opacity: 1;
    color: hsl(var(--s) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-secondary:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--sf) / var(--tw-text-opacity));
    }
}
  .link-accent {
    --tw-text-opacity: 1;
    color: hsl(var(--a) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-accent:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--af) / var(--tw-text-opacity));
    }
}
  .link-neutral {
    --tw-text-opacity: 1;
    color: hsl(var(--n) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-neutral:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--nf) / var(--tw-text-opacity));
    }
}
  .link-success {
    --tw-text-opacity: 1;
    color: hsl(var(--su) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-success:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--su) / var(--tw-text-opacity));
    }
}
  .link-info {
    --tw-text-opacity: 1;
    color: hsl(var(--in) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-info:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--in) / var(--tw-text-opacity));
    }
}
  .link-warning {
    --tw-text-opacity: 1;
    color: hsl(var(--wa) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-warning:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--wa) / var(--tw-text-opacity));
    }
}
  .link-error {
    --tw-text-opacity: 1;
    color: hsl(var(--er) / var(--tw-text-opacity));
}
  @media(hover:hover) {
    .link-error:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--er) / var(--tw-text-opacity));
    }
}
  .link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
  .link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: 1.5rem;
  background-color: currentColor;
  mask-size: 100%;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
.loading-spinner {
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
.loading-dots {
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_qM83%7Banimation:spinner_8HQG 1.05s infinite%7D.spinner_oXPr%7Banimation-delay:.1s%7D.spinner_ZTLf%7Banimation-delay:.2s%7D@keyframes spinner_8HQG%7B0%25,57.14%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);transform:translate(0)%7D28.57%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);transform:translateY(-6px)%7D100%25%7Btransform:translate(0)%7D%7D%3C/style%3E%3Ccircle class='spinner_qM83' cx='4' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_oXPr' cx='12' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_ZTLf' cx='20' cy='12' r='3'/%3E%3C/svg%3E");
}
.loading-ring {
  mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}
.loading-ball {
  mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_rXNP%7Banimation:spinner_YeBj .8s infinite%7D@keyframes spinner_YeBj%7B0%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);cy:5px%7D46.875%25%7Bcy:20px;rx:4px;ry:4px%7D50%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);cy:20.5px;rx:4.8px;ry:3px%7D53.125%25%7Brx:4px;ry:4px%7D100%25%7Bcy:5px%7D%7D%3C/style%3E%3Cellipse class='spinner_rXNP' cx='12' cy='5' rx='4' ry='4'/%3E%3C/svg%3E");
}
.loading-bars {
  mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_hzlK%7Banimation:spinner_vc4H .8s linear infinite;animation-delay:-.8s%7D.spinner_koGT%7Banimation-delay:-.65s%7D.spinner_YF1u%7Banimation-delay:-.5s%7D@keyframes spinner_vc4H%7B0%25%7By:1px;height:22px%7D93.75%25%7By:5px;height:14px;opacity:.2%7D%7D%3C/style%3E%3Crect class='spinner_hzlK' x='1' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_koGT' x='9' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_YF1u' x='17' y='1' width='6' height='22'/%3E%3C/svg%3E");
}
.loading-infinity {
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='%230a0a0a' stroke-width='10' stroke-dasharray='205.271142578125 51.317785644531256' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.58892822265625'%3E%3C/animate%3E%3C/path%3E%3C/svg%3E");
}
.loading-xs {
  width: 1rem;
}
.loading-sm {
  width: 1.25rem;
}
.loading-md {
  width: 1.5rem;
}
.loading-lg {
  width: 2.5rem;
}
.mask-squircle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
  }
  .mask-decagon {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-diamond {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-heart {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-hexagon {
    mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-hexagon-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-circle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M46.154 0H200l-46.154 153.846H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.846 0H0l46.154 153.846H200z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram-3 {
    mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.077 47.077v153.846l153.846-46.154V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram-4 {
    mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.923 47.077v153.846L.077 154.77V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-pentagon {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-square {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 0h200v200H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-star {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-star-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle {
    mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle-3 {
    mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle-4 {
    mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
.menu {
  padding: 0.5rem;
}
:where(.menu li:empty) {
  background-color: hsl(var(--bc) / 0.1);
  margin: 0.5rem 1rem;
  height: 1px;
}
.menu :where(li ul) {
  margin-left: 1rem;
  padding-left: 0.5rem;
}
.menu :where(li ul):before {
  position: absolute;
  bottom: 0.75rem;
  left: 0px;
  top: 0.75rem;
  width: 1px;
  background-color: hsl(var(--bc) / 0.1);
    content: "";
}
.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: left;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-radius: var(--rounded-btn, 0.5rem);
  text-wrap: balance;
}
:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):is(summary):not(.active):focus-visible,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):is(summary):not(.active):focus-visible {
  cursor: pointer;
  background-color: hsl(var(--bc) / 0.1);
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  outline: 2px solid transparent;
  outline-offset: 2px;
}
@media (hover: hover) {
    :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(.active):hover, :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(.active):hover {
    cursor: pointer;
    background-color: hsl(var(--bc) / 0.1);
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  }
.menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity));
}
@media(hover:hover) {
  .menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
  }
}
.menu li.disabled {
  color: hsl(var(--bc) / 0.3);
}
.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}
.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
  justify-self: end;
  display: block;
  margin-top: -0.5rem;
  height: 0.5rem;
  width: 0.5rem;
  transform: rotate(45deg);
  transition-property: transform, margin-top;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}
.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  transform: rotate(225deg);
  margin-top: 0;
}
.menu-title {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 700;
  color: hsl(var(--bc) / 0.4);
}
.mockup-code {
      min-width: 18rem;
      --tw-bg-opacity: 1;
      background-color: hsl(var(--n) / var(--tw-bg-opacity));
      padding-top: 1.25rem;
      padding-bottom: 1.25rem;
      --tw-text-opacity: 1;
      color: hsl(var(--nc) / var(--tw-text-opacity));
      border-radius: var(--rounded-box, 1rem);
}
    .mockup-code:before {
      content: "";
      margin-bottom: 1rem;
      display: block;
      height: 0.75rem;
      width: 0.75rem;
      border-radius: 9999px;
      opacity: 0.3;
      box-shadow:
        1.4em 0,
        2.8em 0,
        4.2em 0;
    }
    .mockup-code pre {
      padding-right: 1.25rem;
}
    .mockup-code pre:before {
        content: "";
        margin-right: 2ch;
      }
    .mockup-code pre[data-prefix]:before {
        content: attr(data-prefix);
        width: 2rem;
        opacity: 0.5;
      }
  .mockup-window {
      padding-top: 1.25rem;
      border-radius: var(--rounded-box, 1rem);
}
  .mockup-window:before {
      content: "";
      margin-bottom: 1rem;
      display: block;
      aspect-ratio: 1 / 1;
      height: 0.75rem;
      border-radius: 9999px;
      opacity: 0.3;
      box-shadow:
        1.4em 0,
        2.8em 0,
        4.2em 0;
    }
  .mockup-phone {
    display: inline-block;
    border: 4px solid #444;
    border-radius: 50px;
    background-color: #000;
    padding: 10px;
    margin: 0 auto;
    overflow: hidden;
  }
  .mockup-phone .camera {
      position: relative;
      top: 0px;
      left: 0px;
      background: #000;
      height: 25px;
      width: 150px;
      margin: 0 auto;
      border-bottom-left-radius: 17px;
      border-bottom-right-radius: 17px;
      z-index: 11;
    }
  .mockup-phone .camera:before {
        content: "";
        position: absolute;
        top: 35%;
        left: 50%;
        width: 50px;
        height: 4px;
        border-radius: 5px;
        background-color: #0c0b0e;
        transform: translate(-50%, -50%);
      }
  .mockup-phone .camera:after {
        content: "";
        position: absolute;
        top: 20%;
        left: 70%;
        width: 8px;
        height: 8px;
        border-radius: 5px;
        background-color: #0f0b25;
      }
  .mockup-phone .display {
      overflow: hidden;
      border-radius: 40px;
      margin-top: -25px;
    }
  .mockup-browser {
      border-radius: var(--rounded-box, 1rem);
}
  .mockup-browser .mockup-browser-toolbar {
      margin-top: 0.75rem;
      margin-bottom: 0.75rem;
      display: inline-flex;
      width: 100%;
      align-items: center;
      padding-right: 1.4em;
}
  .mockup-browser .mockup-browser-toolbar:before {
        content: "";
        margin-right: 4.8rem;
        display: inline-block;
        aspect-ratio: 1 / 1;
        height: 0.75rem;
        border-radius: 9999px;
        opacity: 0.3;
        box-shadow:
          1.4em 0,
          2.8em 0,
          4.2em 0;
      }
  .mockup-browser .mockup-browser-toolbar .input {
      position: relative;
      margin-left: auto;
      margin-right: auto;
      display: block;
      height: 1.75rem;
      width: 24rem;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      --tw-bg-opacity: 1;
      background-color: hsl(var(--b2) / var(--tw-bg-opacity));
      padding-left: 2rem;
}
  .mockup-browser .mockup-browser-toolbar .input:before {
          content: "";
          position: absolute;
          left: 0.5rem;
          top: 50%;
          aspect-ratio: 1 / 1;
          height: 0.75rem;
          --tw-translate-y: -50%;
          transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
          border-radius: 9999px;
          border-width: 2px;
          border-color: currentColor;
          opacity: 0.6;
        }
  .mockup-browser .mockup-browser-toolbar .input:after {
          content: "";
          position: absolute;
          left: 1.25rem;
          top: 50%;
          height: 0.5rem;
          --tw-translate-y: 25%;
          --tw-rotate: -45deg;
          transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
          border-radius: 9999px;
          border-width: 1px;
          border-color: currentColor;
          opacity: 0.6;
        }
.modal {
  background-color: transparent;
  color: inherit;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-property: transform, opacity, visibility;
  overflow-y: hidden;
  overscroll-behavior: contain;
}
  .modal:not(dialog:not(.modal-open)),
  .modal::backdrop {
    background-color: rgba(0, 0, 0, 0.3);
    animation: modal-pop 0.2s ease-out;
  }
.modal-backdrop {
  z-index: -1;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  align-self: stretch;
  justify-self: stretch;
  color: transparent;
}
.modal-box {
  grid-column-start: 1;
  grid-row-start: 1;
  width: 91.666667%;
  max-width: 32rem;
  --tw-scale-x: .9;
  --tw-scale-y: .9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  padding: 1.5rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-top-left-radius: var(--rounded-box, 1rem);
  border-top-right-radius: var(--rounded-box, 1rem);
  border-bottom-left-radius: var(--rounded-box, 1rem);
  border-bottom-right-radius: var(--rounded-box, 1rem);
  box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
  --tw-translate-y: 0px;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.modal-action {
  margin-top: 1.5rem;
  justify-content: flex-end;
}
.modal-action > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
@keyframes modal-pop {
  0% {
    opacity: 0;
  }
}
.navbar {
  padding: var(--navbar-padding, 0.5rem);
  min-height: 4rem;
  width: 100%;
}
.progress {
    height: 0.5rem;
    background-color: hsl(var(--bc) / 0.2);
    border-radius: var(--rounded-box, 1rem);
}
  .progress::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-primary::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-secondary::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-accent::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-info::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-success::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-warning::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-error::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress:indeterminate {
    --progress-color: hsl(var(--bc));
  }
  .progress-primary:indeterminate {
    --progress-color: hsl(var(--p));
  }
  .progress-secondary:indeterminate {
    --progress-color: hsl(var(--s));
  }
  .progress-accent:indeterminate {
    --progress-color: hsl(var(--a));
  }
  .progress-info:indeterminate {
    --progress-color: hsl(var(--in));
  }
  .progress-success:indeterminate {
    --progress-color: hsl(var(--su));
  }
  .progress-warning:indeterminate {
    --progress-color: hsl(var(--wa));
  }
  .progress-error:indeterminate {
    --progress-color: hsl(var(--er));
  }
  .progress::-webkit-progress-bar {
    background-color: transparent;
    border-radius: var(--rounded-box, 1rem);
}
  .progress::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}
  .progress-primary::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
}
  .progress-secondary::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
}
  .progress-accent::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
}
  .progress-info::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
  .progress-success::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
}
  .progress-warning::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--wa) / var(--tw-bg-opacity));
}
  .progress-error::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
}

.progress:indeterminate {
  background-image: repeating-linear-gradient(
    90deg,
    var(--progress-color) -1%,
    var(--progress-color) 10%,
    transparent 10%,
    transparent 90%
  );
  background-size: 200%;
  background-position-x: 15%;
  animation: progress-loading 5s ease-in-out infinite;
}

.progress:indeterminate::-moz-progress-bar {
    background-color: transparent;
  background-image: repeating-linear-gradient(
    90deg,
    var(--progress-color) -1%,
    var(--progress-color) 10%,
    transparent 10%,
    transparent 90%
  );
  background-size: 200%;
  background-position-x: 15%;
  animation: progress-loading 5s ease-in-out infinite;
}

@keyframes progress-loading {
  50% {
    background-position-x: -115%;
  }
}
.radial-progress {
  --value: 0;
  --size: 5rem;
  --thickness: calc(var(--size) / 10);
}
.radial-progress:after {
  background-color: currentColor;
}
.radio {
  --chkbg: var(--bc);
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
  appearance: none;
  border-radius: 9999px;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
}
  .radio:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1);
}
  .radio:checked,
  .radio[aria-checked="true"] {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    animation: radiomark var(--animation-input, 0.2s) ease-out;
    box-shadow:
      0 0 0 4px hsl(var(--b1)) inset,
      0 0 0 4px hsl(var(--b1)) inset;
}
  .radio-primary {
    --chkbg: var(--p);
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-primary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
}
  .radio-primary:focus-visible {
  outline-color: hsl(var(--p) / 1);
}
  .radio-primary:checked,
    .radio-primary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
  .radio-secondary {
    --chkbg: var(--s);
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-secondary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
  }
}
  .radio-secondary:focus-visible {
  outline-color: hsl(var(--s) / 1);
}
  .radio-secondary:checked,
    .radio-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
  .radio-accent {
    --chkbg: var(--a);
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-accent:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
  }
}
  .radio-accent:focus-visible {
  outline-color: hsl(var(--a) / 1);
}
  .radio-accent:checked,
    .radio-accent[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
  .radio-success {
    --chkbg: var(--su);
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-success:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
  }
}
  .radio-success:focus-visible {
  outline-color: hsl(var(--su) / 1);
}
  .radio-success:checked,
    .radio-success[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
}
  .radio-warning {
    --chkbg: var(--wa);
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-warning:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
  }
}
  .radio-warning:focus-visible {
  outline-color: hsl(var(--wa) / 1);
}
  .radio-warning:checked,
    .radio-warning[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
}
  .radio-info {
    --chkbg: var(--in);
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-info:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
  }
}
  .radio-info:focus-visible {
  outline-color: hsl(var(--in) / 1);
}
  .radio-info:checked,
    .radio-info[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
}
  .radio-error {
    --chkbg: var(--er);
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
  }
  @media(hover:hover) {
  .radio-error:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
  }
}
  .radio-error:focus-visible {
  outline-color: hsl(var(--er) / 1);
}
  .radio-error:checked,
    .radio-error[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
}
  .radio:disabled {
  cursor: not-allowed;
  opacity: 0.2;
}

@keyframes radiomark {
  0% {
    box-shadow:
      0 0 0 12px hsl(var(--b1)) inset,
      0 0 0 12px hsl(var(--b1)) inset;
  }
  50% {
    box-shadow:
      0 0 0 3px hsl(var(--b1)) inset,
      0 0 0 3px hsl(var(--b1)) inset;
  }
  100% {
    box-shadow:
      0 0 0 4px hsl(var(--b1)) inset,
      0 0 0 4px hsl(var(--b1)) inset;
  }
}

/* backward compatibility */

.radio-mark {
  display: none;
}
.range {
  appearance: none;
  -webkit-appearance: none;
  --range-shdw: var(--bc);
  overflow: hidden;
  background-color: transparent;
  border-radius: var(--rounded-box, 1rem);
}
  .range:focus-visible::-webkit-slider-thumb {
    --focus-shadow: 0 0 0 6px hsl(var(--b1)) inset, 0 0 0 2rem hsl(var(--range-shdw)) inset;
  }
  .range:focus-visible::-moz-range-thumb {
    --focus-shadow: 0 0 0 6px hsl(var(--b1)) inset, 0 0 0 2rem hsl(var(--range-shdw)) inset;
  }
  .range::-webkit-slider-runnable-track {
  height: 0.5rem;
  width: 100%;
  background-color: hsl(var(--bc) / 0.1);
  border-radius: var(--rounded-box, 1rem);
}
  .range::-moz-range-track {
  height: 0.5rem;
  width: 100%;
  background-color: hsl(var(--bc) / 0.1);
  border-radius: var(--rounded-box, 1rem);
}
  .range::-webkit-slider-thumb {
  position: relative;
  height: 1.5rem;
  width: 1.5rem;
  border-style: none;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-radius: var(--rounded-box, 1rem);
    appearance: none;
    -webkit-appearance: none;
    top: 50%;
    color: hsl(var(--range-shdw));
    transform: translateY(-50%);
    --filler-size: 100rem;
    --filler-offset: 0.6rem;
    box-shadow:
      0 0 0 3px hsl(var(--range-shdw)) inset,
      var(--focus-shadow, 0 0),
      calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}
  .range::-moz-range-thumb {
  position: relative;
  height: 1.5rem;
  width: 1.5rem;
  border-style: none;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-radius: var(--rounded-box, 1rem);
    top: 50%;
    color: hsl(var(--range-shdw));
    --filler-size: 100rem;
    --filler-offset: 0.5rem;
    box-shadow:
      0 0 0 3px hsl(var(--range-shdw)) inset,
      var(--focus-shadow, 0 0),
      calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}
  .range-primary {
    --range-shdw: var(--p);
  }
  .range-secondary {
    --range-shdw: var(--s);
  }
  .range-accent {
    --range-shdw: var(--a);
  }
  .range-success {
    --range-shdw: var(--su);
  }
  .range-warning {
    --range-shdw: var(--wa);
  }
  .range-info {
    --range-shdw: var(--in);
  }
  .range-error {
    --range-shdw: var(--er);
  }
.rating input {
    appearance: none;
    -webkit-appearance: none;
}
  .rating :where(input) {
    animation: rating-pop var(--animation-input, 0.25s) ease-out;
    height: 1.5rem;
    width: 1.5rem;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
  }
  .rating .rating-hidden {
    width: 0.5rem;
    background-color: transparent;
}
  .rating input:checked ~ input,
  .rating input[aria-checked="true"] ~ input {
    --tw-bg-opacity: 0.2;
}
  .rating input:focus-visible {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transform: translateY(-0.125em);
}
  .rating input:active:focus {
    animation: none;
    transform: translateY(-0.125em);
  }
.rating-half :where(input:not(.rating-hidden)) {
    width: 0.75rem;
}
@keyframes rating-pop {
  0% {
    transform: translateY(-0.125em);
  }
  40% {
    transform: translateY(-0.125em);
  }
  100% {
    transform: translateY(0);
  }
}
.select {
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  padding-right: 2.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
  .select-bordered {
  --tw-border-opacity: 0.2;
}
  .select {
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position:
    calc(100% - 20px) calc(1px + 50%),
    calc(100% - 16.1px) calc(1px + 50%);
  background-size:
    4px 4px,
    4px 4px;
  background-repeat: no-repeat;
}
  .select:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 0.2);
}
  .select-ghost {
  --tw-bg-opacity: 0.05;
}
  .select-ghost:focus {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
}
  .select-primary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
  .select-primary:focus {
  outline-color: hsl(var(--p) / 1);
}
  .select-secondary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
}
  .select-secondary:focus {
  outline-color: hsl(var(--s) / 1);
}
  .select-accent {
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / var(--tw-border-opacity));
}
  .select-accent:focus {
  outline-color: hsl(var(--a) / 1);
}
  .select-info {
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / var(--tw-border-opacity));
}
  .select-info:focus {
  outline-color: hsl(var(--in) / 1);
}
  .select-success {
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / var(--tw-border-opacity));
}
  .select-success:focus {
  outline-color: hsl(var(--su) / 1);
}
  .select-warning {
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
}
  .select-warning:focus {
  outline-color: hsl(var(--wa) / 1);
}
  .select-error {
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / var(--tw-border-opacity));
}
  .select-error:focus {
  outline-color: hsl(var(--er) / 1);
}
  .select-disabled,
  .select:disabled,
  .select[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  --tw-text-opacity: 0.2;
}
  .select-disabled::placeholder,
  .select:disabled::placeholder,
  .select[disabled]::placeholder {
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}
  .select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]) {
  background-image: none;
  padding-right: 1rem;
}

[dir="rtl"] .select {
  background-position:
    calc(0% + 12px) calc(1px + 50%),
    calc(0% + 16px) calc(1px + 50%);
}
.stack {
    place-items: center;
    align-items: flex-end
}
  .stack > * {
    width: 100%;
    opacity: 0.6
}
  .stack > *:nth-child(2) {
    opacity: 0.8
}
  .stack > *:nth-child(1) {
    opacity: 1
}
.stats {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    border-radius: var(--rounded-box, 1rem)
}
:where(.stats) > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(1px * var(--tw-divide-x-reverse));
    border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(0px * var(--tw-divide-y-reverse))
}
:where(.stats) {
    overflow-x: auto
}
.stat {
    column-gap: 1rem;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.1;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    padding-top: 1rem;
    padding-bottom: 1rem
}
.stat-title {
    color: hsl(var(--bc) / 0.6)
}
.stat-value {
    font-size: 2.25rem;
    line-height: 2.5rem;
    font-weight: 800
}
.stat-desc {
    font-size: 0.75rem;
    line-height: 1rem;
    color: hsl(var(--bc) / 0.6)
}
.stat-actions {
    margin-top: 1rem
}
/* .stat + .stat {
  @apply border-l border-base-content border-opacity-10;
}
.stats.grid-flow-row {
  .stat + .stat {
    @apply border-l-0 border-t;
  }
} */
.steps {
  /* &-vertical{
    .step {
      gap: .5rem;
      grid-template-columns: 40px 1fr;
      grid-template-rows: auto;
      min-height: 4rem;
      justify-items: start;
      &:before {
        @apply w-2 h-full top-0 transform -translate-y-1/2 -translate-x-1/2;
        margin-left: 50%;
      }
    }
  } */
}
  /* &,
  &-horizontal{ */
  .steps .step {
    grid-template-rows: 40px 1fr;
    grid-template-columns: auto;
    min-width: 4rem;
  }
  .steps .step:before {
  top: 0px;
  grid-column-start: 1;
  grid-row-start: 1;
  height: 0.5rem;
  width: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b3) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
      content: "";
      margin-left: -100%;
}
  /* } */
  .steps .step:after {
      content: counter(step);
      counter-increment: step;
      z-index: 1;
      position: relative;
      grid-column-start: 1;
      grid-row-start: 1;
      display: grid;
      height: 2rem;
      width: 2rem;
      place-items: center;
      place-self: center;
      border-radius: 9999px;
      --tw-bg-opacity: 1;
      background-color: hsl(var(--b3) / var(--tw-bg-opacity));
      --tw-text-opacity: 1;
      color: hsl(var(--bc) / var(--tw-text-opacity));
    }
  .steps .step:first-child:before {
      content: none;
    }
  .steps .step[data-content]:after {
      content: attr(data-content);
    }
  .steps .step-neutral + .step-neutral:before,
  .steps .step-neutral:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity));
}
  .steps .step-primary + .step-primary:before,
  .steps .step-primary:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
  .steps .step-secondary + .step-secondary:before,
  .steps .step-secondary:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
  .steps .step-accent + .step-accent:before,
  .steps .step-accent:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
  .steps .step-info + .step-info:before {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
  .steps .step-info:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
}
  .steps .step-success + .step-success:before {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
}
  .steps .step-success:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
}
  .steps .step-warning + .step-warning:before {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
}
  .steps .step-warning:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
}
  .steps .step-error + .step-error:before {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
}
  .steps .step-error:after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
}
.swap {
  cursor: pointer;
}

.swap > * {
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-property: transform, opacity;
}

.swap-rotate .swap-on,
.swap-rotate .swap-indeterminate,
.swap-rotate input:indeterminate ~ .swap-on {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked ~ .swap-off,
.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:indeterminate ~ .swap-off {
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked ~ .swap-on,
.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:indeterminate ~ .swap-indeterminate {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-flip {
  transform-style: preserve-3d;
  perspective: 16em;
}

.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate ~ .swap-on {
  transform: rotateY(180deg);
  backface-visibility: hidden;
  opacity: 1;
}

.swap-flip input:checked ~ .swap-off,
.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
  opacity: 1;
}

.swap-flip input:checked ~ .swap-on,
.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
  transform: rotateY(0deg);
}
.tab {
  --tw-text-opacity: 0.5;
}@media(hover:hover) {.tab:hover {
    --tw-text-opacity: 1;
  }
}.tab {
  --tab-color: hsl(var(--bc) / var(--tw-text-opacity, 1));
  --tab-bg: hsl(var(--b1) / var(--tw-bg-opacity, 1));
  --tab-border-color: hsl(var(--b3) / var(--tw-bg-opacity, 1));
  color: var(--tab-color);
  padding-left: var(--tab-padding, 1rem);
  padding-right: var(--tab-padding, 1rem);
}
  .tab.tab-active:not(.tab-disabled):not([disabled]) {
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
}
  .tab:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
  .tab:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: -3px;
  }
  .tab:focus-visible.tab-lifted {
      border-bottom-right-radius: var(--tab-radius, 0.5rem);
      border-bottom-left-radius: var(--tab-radius, 0.5rem);
    }
  /* disabled */
  .tab-disabled,
  .tab[disabled] {
  cursor: not-allowed;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}
  @media (hover: hover) {
    .tab[disabled],
    .tab[disabled]:hover {
    cursor: not-allowed;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
  }
  }
.tab-bordered {
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  border-style: solid;
  border-bottom-width: calc(var(--tab-border, 1px) + 1px);
}
.tab-lifted {
  border: var(--tab-border, 1px) solid transparent;
  border-width: 0 0 var(--tab-border, 1px) 0;
  border-top-left-radius: var(--tab-radius, 0.5rem);
  border-top-right-radius: var(--tab-radius, 0.5rem);
  border-bottom-color: var(--tab-border-color);
  padding-left: var(--tab-padding, 1rem);
  padding-right: var(--tab-padding, 1rem);
  padding-top: var(--tab-border, 1px);
}
.tab-lifted.tab-active:not(.tab-disabled):not([disabled]) {
    background-color: var(--tab-bg);
    border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
    border-left-color: var(--tab-border-color);
    border-right-color: var(--tab-border-color);
    border-top-color: var(--tab-border-color);
    padding-left: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
    padding-right: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
    padding-bottom: var(--tab-border, 1px);
    padding-top: 0;
  }
.tab-lifted.tab-active:not(.tab-disabled):not([disabled]):before,
    .tab-lifted.tab-active:not(.tab-disabled):not([disabled]):after {
      z-index: 1;
      content: "";
      display: block;
      position: absolute;
      width: var(--tab-radius, 0.5rem);
      height: var(--tab-radius, 0.5rem);
      bottom: 0;
      --tab-grad: calc(68% - var(--tab-border, 1px));
      --tab-corner-bg: radial-gradient(
        circle at var(--circle-pos),
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.3px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.3px)
      );
    }
.tab-lifted.tab-active:not(.tab-disabled):not([disabled]):before {
      left: calc(var(--tab-radius, 0.5rem) * -1);
      --circle-pos: top left;
      background-image: var(--tab-corner-bg);
    }
/* RTL quick fix */
[dir="rtl"] .tab-lifted.tab-active:not(.tab-disabled):not([disabled]):before {
        --circle-pos: top right;
      }
.tab-lifted.tab-active:not(.tab-disabled):not([disabled]):after {
      right: calc(var(--tab-radius, 0.5rem) * -1);
      --circle-pos: top right;
      background-image: var(--tab-corner-bg);
    }
/* RTL quick fix */
[dir="rtl"] .tab-lifted.tab-active:not(.tab-disabled):not([disabled]):after {
        --circle-pos: top left;
      }
.tab-lifted.tab-active:not(.tab-disabled):not([disabled]):first-child:before {
      background: none;
    }
.tab-lifted.tab-active:not(.tab-disabled):not([disabled]):last-child:after {
      background: none;
    }
.tab-lifted.tab-active:not(.tab-disabled):not([disabled])
  + .tab-lifted.tab-active:not(.tab-disabled):not([disabled]):before {
    background: none;
  }
.tabs-boxed {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  padding: 0.25rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
.tabs-boxed .tab {
  border-radius: var(--rounded-btn, 0.5rem);
}
.tabs-boxed .tab-active:not(.tab-disabled):not([disabled]) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
@media(hover:hover) {.tabs-boxed .tab-active:not(.tab-disabled):not([disabled]):hover {
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
  }
}
.table {
    text-align: left;
    font-size: 0.875rem;
    line-height: 1.25rem;
    border-radius: var(--rounded-box, 1rem)
}
  .table :where(th, td) {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    vertical-align: middle
}
  .table tr.active,
  .table tr.active:nth-child(even),
  .table-zebra tbody tr:nth-child(even) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity))
}
  @media(hover:hover) {
    .table tr.hover:hover,
  .table tr.hover:nth-child(even):hover {
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b2) / var(--tw-bg-opacity))
    }
}
  .table-zebra tr.active,
    .table-zebra tr.active:nth-child(even),
    .table-zebra-zebra tbody tr:nth-child(even) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity))
}
  @media(hover:hover) {
    .table-zebra tr.hover:hover,
  .table-zebra tr.hover:nth-child(even):hover {
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b3) / var(--tw-bg-opacity))
    }
}
  .table :where(thead, tbody) :where(tr:not(:last-child)),
    .table :where(thead, tbody) :where(tr:first-child:last-child) {
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-bottom-color: hsl(var(--b2) / var(--tw-border-opacity))
}
  .table :where(thead, tfoot) {
    white-space: nowrap;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 700;
    color: hsl(var(--bc) / 0.6)
}
.textarea {
      border-width: 1px;
      border-color: hsl(var(--bc) / var(--tw-border-opacity));
      --tw-border-opacity: 0;
      --tw-bg-opacity: 1;
      background-color: hsl(var(--b1) / var(--tw-bg-opacity));
      border-radius: var(--rounded-btn, 0.5rem)
}
  .textarea-bordered {
      --tw-border-opacity: 0.2
}
  .textarea:focus {
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: hsl(var(--bc) / 0.2)
}
  .textarea-ghost {
      --tw-bg-opacity: 0.05
}
  .textarea-ghost:focus {
      --tw-bg-opacity: 1;
      --tw-text-opacity: 1;
      color: hsl(var(--bc) / var(--tw-text-opacity));
      box-shadow: none
}
  .textarea-primary {
      --tw-border-opacity: 1;
      border-color: hsl(var(--p) / var(--tw-border-opacity))
}
  .textarea-primary:focus {
      outline-color: hsl(var(--p) / 1)
}
  .textarea-secondary {
      --tw-border-opacity: 1;
      border-color: hsl(var(--s) / var(--tw-border-opacity))
}
  .textarea-secondary:focus {
      outline-color: hsl(var(--s) / 1)
}
  .textarea-accent {
      --tw-border-opacity: 1;
      border-color: hsl(var(--a) / var(--tw-border-opacity))
}
  .textarea-accent:focus {
      outline-color: hsl(var(--a) / 1)
}
  .textarea-info {
      --tw-border-opacity: 1;
      border-color: hsl(var(--in) / var(--tw-border-opacity))
}
  .textarea-info:focus {
      outline-color: hsl(var(--in) / 1)
}
  .textarea-success {
      --tw-border-opacity: 1;
      border-color: hsl(var(--su) / var(--tw-border-opacity))
}
  .textarea-success:focus {
      outline-color: hsl(var(--su) / 1)
}
  .textarea-warning {
      --tw-border-opacity: 1;
      border-color: hsl(var(--wa) / var(--tw-border-opacity))
}
  .textarea-warning:focus {
      outline-color: hsl(var(--wa) / 1)
}
  .textarea-error {
      --tw-border-opacity: 1;
      border-color: hsl(var(--er) / var(--tw-border-opacity))
}
  .textarea-error:focus {
      outline-color: hsl(var(--er) / 1)
}
  .textarea-disabled,
  .textarea:disabled,
  .textarea[disabled] {
      cursor: not-allowed;
      --tw-border-opacity: 1;
      border-color: hsl(var(--b2) / var(--tw-border-opacity));
      --tw-bg-opacity: 1;
      background-color: hsl(var(--b2) / var(--tw-bg-opacity));
      --tw-text-opacity: 0.2
}
  .textarea-disabled::placeholder,
  .textarea:disabled::placeholder,
  .textarea[disabled]::placeholder {
      color: hsl(var(--bc) / var(--tw-placeholder-opacity));
      --tw-placeholder-opacity: 0.2
}
.toast {
    gap: 0.5rem;
    padding: 1rem;
}
  .toast > * {
    animation: toast-pop 0.25s ease-out;
  }

@keyframes toast-pop {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
.toggle {
  --tglbg: hsl(var(--b1));
  --handleoffset: 1.5rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --togglehandleborder: 0 0;
  height: 1.5rem;
  width: 3rem;
  cursor: pointer;
  appearance: none;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.5;
  border-radius: var(--rounded-badge, 1.9rem);
  transition:
    background,
    box-shadow var(--animation-input, 0.2s) ease-out;
  box-shadow:
    var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset,
    var(--togglehandleborder);
}
  [dir="rtl"] .toggle {
    --handleoffsetcalculator: calc(var(--handleoffset) * 1);
  }
  .toggle:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 0.2);
}
  .toggle:checked,
  .toggle[checked="true"],
  .toggle[aria-checked="true"] {
    --handleoffsetcalculator: var(--handleoffset);
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
  }
  [dir="rtl"] .toggle:checked, [dir="rtl"] .toggle[checked="true"], [dir="rtl"] .toggle[aria-checked="true"] {
      --handleoffsetcalculator: calc(var(--handleoffset) * -1);
    }
  .toggle:indeterminate {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
    box-shadow:
      calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
      calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
      0 0 0 2px var(--tglbg) inset;
}
  [dir="rtl"] .toggle:indeterminate {
      box-shadow:
        calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
        calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
        0 0 0 2px var(--tglbg) inset;
    }
  .toggle-primary:focus-visible {
  outline-color: hsl(var(--p) / 1);
}
  .toggle-primary:checked,
    .toggle-primary[checked="true"],
    .toggle-primary[aria-checked="true"] {
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
  .toggle-secondary:focus-visible {
  outline-color: hsl(var(--s) / 1);
}
  .toggle-secondary:checked,
    .toggle-secondary[checked="true"],
    .toggle-secondary[aria-checked="true"] {
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
  .toggle-accent:focus-visible {
  outline-color: hsl(var(--a) / 1);
}
  .toggle-accent:checked,
    .toggle-accent[checked="true"],
    .toggle-accent[aria-checked="true"] {
  border-color: hsl(var(--a) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
  .toggle-success:focus-visible {
  outline-color: hsl(var(--su) / 1);
}
  .toggle-success:checked,
    .toggle-success[checked="true"],
    .toggle-success[aria-checked="true"] {
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc) / var(--tw-text-opacity));
}
  .toggle-warning:focus-visible {
  outline-color: hsl(var(--wa) / 1);
}
  .toggle-warning:checked,
    .toggle-warning[checked="true"],
    .toggle-warning[aria-checked="true"] {
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac) / var(--tw-text-opacity));
}
  .toggle-info:focus-visible {
  outline-color: hsl(var(--in) / 1);
}
  .toggle-info:checked,
    .toggle-info[checked="true"],
    .toggle-info[aria-checked="true"] {
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc) / var(--tw-text-opacity));
}
  .toggle-error:focus-visible {
  outline-color: hsl(var(--er) / 1);
}
  .toggle-error:checked,
    .toggle-error[checked="true"],
    .toggle-error[aria-checked="true"] {
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc) / var(--tw-text-opacity));
}
  .toggle:disabled {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  background-color: transparent;
  opacity: 0.3;
    --togglehandleborder: 0 0 0 3px hsl(var(--bc)) inset,
      var(--handleoffsetcalculator) 0 0 3px hsl(var(--bc)) inset;
}

/* backward compatibility */

.toggle-mark {
  display: none;
}
:root .prose {
  --tw-prose-body: hsl(var(--bc) / 0.8);
  --tw-prose-headings: hsl(var(--bc));
  --tw-prose-lead: hsl(var(--bc));
  --tw-prose-links: hsl(var(--bc));
  --tw-prose-bold: hsl(var(--bc));
  --tw-prose-counters: hsl(var(--bc));
  --tw-prose-bullets: hsl(var(--bc) / 0.5);
  --tw-prose-hr: hsl(var(--bc) / 0.2);
  --tw-prose-quotes: hsl(var(--bc));
  --tw-prose-quote-borders: hsl(var(--bc) / 0.2);
  --tw-prose-captions: hsl(var(--bc) / 0.5);
  --tw-prose-code: hsl(var(--bc));
  --tw-prose-pre-code: hsl(var(--nc));
  --tw-prose-pre-bg: hsl(var(--n));
  --tw-prose-th-borders: hsl(var(--bc) / 0.5);
  --tw-prose-td-borders: hsl(var(--bc) / 0.2);
}
.prose :where(code):not(:where([class~="not-prose"] *)) {
    padding: 2px 8px;
    border-radius: var(--rounded-badge);
  }
.prose code:after,
  .prose code:before {
    content: none;
  }
.prose pre code {
      border-radius: 0;
      padding: 0;
    }
.prose :where(tbody tr, thead):not(:where([class~="not-prose"] *)) {
    border-bottom-color: hsl(var(--bc) / 20%);
  }
