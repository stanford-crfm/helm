'use client';
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("tslib"),r=require("react"),t=require("../../../lib/constants.cjs"),o=require("../../../lib/utils.cjs"),s=require("../../../lib/tremorTwMerge.cjs"),i=require("./styles.cjs"),l=require("../../util-elements/Tooltip/Tooltip.cjs");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=a(r);const c=o.makeClassName("Icon"),p={Simple:"simple",Light:"light",Shadow:"shadow",Solid:"solid",Outlined:"outlined"},d=n.default.forwardRef(((r,a)=>{const{icon:d,variant:u=p.Simple,tooltip:f,size:m=t.Sizes.SM,color:g,className:h}=r,b=e.__rest(r,["icon","variant","tooltip","size","color","className"]),w=d,j=i.getIconColors(u,g),{tooltipProps:S,getReferenceProps:q}=l.useTooltip();return n.default.createElement("span",Object.assign({ref:o.mergeRefs([a,S.refs.setReference]),className:s.tremorTwMerge(c("root"),"inline-flex flex-shrink-0 items-center",j.bgColor,j.textColor,j.borderColor,j.ringColor,i.shape[u].rounded,i.shape[u].border,i.shape[u].shadow,i.shape[u].ring,i.wrapperProportions[m].paddingX,i.wrapperProportions[m].paddingY,h)},q,b),n.default.createElement(l.default,Object.assign({text:f},S)),n.default.createElement(w,{className:s.tremorTwMerge(c("icon"),"shrink-0",i.iconSizes[m].height,i.iconSizes[m].width)}))}));d.displayName="Icon",exports.IconVariants=p,exports.default=d;
