'use client';
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("tslib"),t=require("react"),o=require("../../../lib/constants.cjs"),r=require("../../../lib/shape.cjs"),i=require("../../../lib/sizing.cjs"),n=require("../../../lib/spacing.cjs"),s=require("../../../lib/utils.cjs"),a=require("../../../lib/tremorTwMerge.cjs"),l=require("react-transition-group"),c=require("../../util-elements/Tooltip/Tooltip.cjs"),d=require("./styles.cjs"),g=require("../../../assets/LoadingSpinner.cjs");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var m=u(t);const f=s.makeClassName("Button"),p=({loading:e,iconSize:t,iconPosition:r,Icon:s,needMargin:l,transitionState:c})=>{const d=l?r===o.HorizontalPositions.Left?a.tremorTwMerge(n.spacing.twoXs.negativeMarginLeft,n.spacing.xs.marginRight):a.tremorTwMerge(n.spacing.twoXs.negativeMarginRight,n.spacing.xs.marginLeft):"",u=a.tremorTwMerge(i.sizing.none.width,i.sizing.none.height),p={default:u,entering:u,entered:t,exiting:t,exited:u};return e?m.default.createElement(g,{className:a.tremorTwMerge(f("icon"),"animate-spin shrink-0",d,p.default,p[c]),style:{transition:"width 150ms"}}):m.default.createElement(s,{className:a.tremorTwMerge(f("icon"),"shrink-0",t,d)})},h=m.default.forwardRef(((t,i)=>{const{icon:n,iconPosition:g=o.HorizontalPositions.Left,size:u=o.Sizes.SM,color:h,variant:w="primary",disabled:b,loading:M=!1,loadingText:T,children:x,tooltip:z,className:j}=t,P=e.__rest(t,["icon","iconPosition","size","color","variant","disabled","loading","loadingText","children","tooltip","className"]),S=n,q=M||b,v=void 0!==S||M,C=M&&T,B=!(!x&&!C),y=a.tremorTwMerge(d.iconSizes[u].height,d.iconSizes[u].width),E="light"!==w?a.tremorTwMerge("rounded-tremor-default","shadow-tremor-input","dark:shadow-dark-tremor-input",r.border.sm.all):"",N=d.getButtonColors(w,h),R=d.getButtonProportions(w)[u],{tooltipProps:k,getReferenceProps:L}=c.useTooltip(300);return m.default.createElement(l.Transition,{in:M,timeout:50},(e=>m.default.createElement("button",Object.assign({ref:s.mergeRefs([i,k.refs.setReference]),className:a.tremorTwMerge(f("root"),"flex-shrink-0 inline-flex justify-center items-center group font-medium outline-none",E,R.paddingX,R.paddingY,R.fontSize,N.textColor,N.bgColor,N.borderColor,N.hoverBorderColor,q?"opacity-50 cursor-not-allowed":a.tremorTwMerge(d.getButtonColors(w,h).hoverTextColor,d.getButtonColors(w,h).hoverBgColor,d.getButtonColors(w,h).hoverBorderColor),j),disabled:q},L,P),m.default.createElement(c.default,Object.assign({text:z},k)),v&&g!==o.HorizontalPositions.Right?m.default.createElement(p,{loading:M,iconSize:y,iconPosition:g,Icon:S,transitionState:e,needMargin:B}):null,C||x?m.default.createElement("span",{className:a.tremorTwMerge(f("text"),"text-sm whitespace-nowrap")},C?T:x):null,v&&g===o.HorizontalPositions.Right?m.default.createElement(p,{loading:M,iconSize:y,iconPosition:g,Icon:S,transitionState:e,needMargin:B}):null)))}));h.displayName="Button",exports.ButtonIconOrSpinner=p,exports.default=h;
