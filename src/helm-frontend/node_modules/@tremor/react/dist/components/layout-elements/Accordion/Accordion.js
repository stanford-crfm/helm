'use client';
import{__rest as e}from"tslib";import r,{createContext as o,useContext as t}from"react";import{border as a}from"../../../lib/shape.js";import{makeClassName as s}from"../../../lib/utils.js";import{tremorTwMerge as d}from"../../../lib/tremorTwMerge.js";import"../../../contexts/BaseColorContext.js";import"../../../contexts/IndexContext.js";import m from"../../../contexts/RootStylesContext.js";import"../../../contexts/SelectedValueContext.js";import{Disclosure as n}from"@headlessui/react";const l=s("Accordion"),i=o({isOpen:!1}),c=r.forwardRef(((o,s)=>{var c;const{defaultOpen:p=!1,children:f,className:u}=o,b=e(o,["defaultOpen","children","className"]),x=null!==(c=t(m))&&void 0!==c?c:d(a.sm.all,"rounded-tremor-default");return r.createElement(n,Object.assign({as:"div",ref:s,className:d(l("root"),"overflow-hidden","bg-tremor-background border-tremor-border","dark:bg-dark-tremor-background dark:border-dark-tremor-border",x,u),defaultOpen:p},b),(({open:e})=>r.createElement(i.Provider,{value:{isOpen:e}},f)))}));c.displayName="Accordion";export{i as OpenContext,c as default};
